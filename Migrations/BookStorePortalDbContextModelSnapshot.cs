// <auto-generated />
using System;
using Boo_Store_Portal_Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Boo_Store_Portal_Api.Migrations
{
    [DbContext(typeof(BookStorePortalDbContext))]
    partial class BookStorePortalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Author", b =>
                {
                    b.Property<int>("AuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuFname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuLname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Discount", b =>
                {
                    b.Property<int>("DisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisId"));

                    b.Property<string>("Dicounttype")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Discount1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Highqty")
                        .HasColumnType("int");

                    b.Property<int?>("Lowqty")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.HasKey("DisId");

                    b.HasIndex("StorId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpId"));

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JobId")
                        .HasColumnType("int");

                    b.Property<string>("JobLvl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Minit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PubId")
                        .HasColumnType("int");

                    b.HasKey("EmpId");

                    b.HasIndex("JobId");

                    b.HasIndex("PubId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<string>("JobDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaxLvl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MinLvl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.PubInfo", b =>
                {
                    b.Property<int>("PubId")
                        .HasColumnType("int");

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PubId");

                    b.ToTable("PubInfos");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Publisher", b =>
                {
                    b.Property<int>("PubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PubId"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PubName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PubId");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Roysched", b =>
                {
                    b.Property<int>("RoyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoyId"));

                    b.Property<decimal?>("Hirange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Lorange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Royalty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("RoyId");

                    b.HasIndex("TitleId");

                    b.ToTable("Royscheds");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Sale", b =>
                {
                    b.Property<int>("OrdNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrdNum"));

                    b.Property<DateTime?>("OrdDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payterms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Qty")
                        .HasColumnType("int");

                    b.Property<int?>("StorId")
                        .HasColumnType("int");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("OrdNum");

                    b.HasIndex("StorId");

                    b.HasIndex("TitleId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Store", b =>
                {
                    b.Property<int>("StorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StorId"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StorId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"));

                    b.Property<decimal?>("Advance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PubId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Pubdate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Royalty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("YtdSales")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TitleId");

                    b.HasIndex("PubId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Titleauthor", b =>
                {
                    b.Property<int>("TitleAuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleAuId"));

                    b.Property<int?>("AuId")
                        .HasColumnType("int");

                    b.Property<string>("AuOrd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Royaltyper")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TitleId")
                        .HasColumnType("int");

                    b.HasKey("TitleAuId");

                    b.HasIndex("AuId");

                    b.HasIndex("TitleId");

                    b.ToTable("Titleauthors");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Discount", b =>
                {
                    b.HasOne("Boo_Store_Portal_Api.Models.Store", "Stor")
                        .WithMany()
                        .HasForeignKey("StorId");

                    b.Navigation("Stor");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Employee", b =>
                {
                    b.HasOne("Boo_Store_Portal_Api.Models.Job", "Job")
                        .WithMany("Employees")
                        .HasForeignKey("JobId");

                    b.HasOne("Boo_Store_Portal_Api.Models.Publisher", "Pub")
                        .WithMany("Employees")
                        .HasForeignKey("PubId");

                    b.Navigation("Job");

                    b.Navigation("Pub");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.PubInfo", b =>
                {
                    b.HasOne("Boo_Store_Portal_Api.Models.Publisher", "Pub")
                        .WithMany()
                        .HasForeignKey("PubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pub");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Roysched", b =>
                {
                    b.HasOne("Boo_Store_Portal_Api.Models.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Sale", b =>
                {
                    b.HasOne("Boo_Store_Portal_Api.Models.Store", "Stor")
                        .WithMany("Sales")
                        .HasForeignKey("StorId");

                    b.HasOne("Boo_Store_Portal_Api.Models.Title", "Title")
                        .WithMany("Sales")
                        .HasForeignKey("TitleId");

                    b.Navigation("Stor");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Title", b =>
                {
                    b.HasOne("Boo_Store_Portal_Api.Models.Publisher", "Pub")
                        .WithMany()
                        .HasForeignKey("PubId");

                    b.Navigation("Pub");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Titleauthor", b =>
                {
                    b.HasOne("Boo_Store_Portal_Api.Models.Author", "Au")
                        .WithMany()
                        .HasForeignKey("AuId");

                    b.HasOne("Boo_Store_Portal_Api.Models.Title", "Title")
                        .WithMany()
                        .HasForeignKey("TitleId");

                    b.Navigation("Au");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Job", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Publisher", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Store", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("Boo_Store_Portal_Api.Models.Title", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
